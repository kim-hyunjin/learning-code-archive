package com.eomcs.basic.ex03;

// 문자 리터럴(literal)

public class Exam41 {
  public static void main(String[] args) {
    // 직접 문자를 작성할 수 있다.
    // '문자'
    System.out.println('A');
    System.out.println('가');

    // UCS-2 코드 값으로 문자를 지정할 수 있다.
    // \u
    System.out.println('\u4eba');   //  사람 인 人
    System.out.println('\u0041');   //  A
    System.out.println('\u0030');   //  0
    System.out.println('\u0025');   //  %
    System.out.println('\uac00');   //  가



    //ASCII(7bit)
    /*
    A -> 100 0001
    B -> 100 0010
    C -> 100 0011
    ...
    영어 대소문자 + 특수문자 약 90여개
    */

    //ISO-8859-1(8bit)
    /*
    ASCII + 서유럽문자 = 200여개
    A -> 0100 0001
    B -> 0100 0010
    C -> 0100 0011
    ...
    */

    //EUC-KR(16bit)
    //한글 2350자
    /*
    영어 : ISO-8859-1
    한글 : 2byte 코드값
    가 -> 0xB0A1
    각 -> 0xB0A2
    똘 -> 0xB6CA
    똠 -> 정의되어 있지 않음
    똡 -> 정의되어 있지 않음
    똣 -> 정의되어 있지 않음
    똥 -> 0xB6CB
    */

    //조합형(16bit)
    //맨왼쪽1비트 + 초성 5비트 + 중성 5비트 + 종성 5비트 = 16비트
    //약 3만자의 한글을 표현할 수 있으나 국제표준은 아님

    //  MS949(11172자)
    /*  EUC-KR + 알파
        windows95 ~ 지원
        똘 -> 0xB6CA
        똠 -> 0x8C63
        똡 -> 0x8C64
        똥 -> 0xB6CB
        국제표준이 아님
        현재 우리가 사용하는 윈도우 컴퓨터 명령어창에서는 MS949사용
    */
    
    // 문자에 대해 코드값을 정의한 표
    // = Character Set

    // 유니코드
    //- 국제 표준 인코딩 규칙이다.
    //- UCS-2의 경우 영어, 한글 모두 2바이트로 인코딩한다.
    //- MS949의 모든 한글 문자가 포함되어 있다.
    //- A(0x0041), B(0x0042), +(0x002b), 가(0xac00), 각(0xac01), ...
    //- 기존의 EUC-KR과 MS949 코드와 호환되지 않는다.
    //- JVM은 내부에서 문자열을 다룰 때 UCS-2를 사용한다.
    //  즉 영어, 한글 모두 2바이트 유니코드로 다룬다.
    //
    //## UCS(Universal Coded Character Set; 국제 문자 집합)
    //- 'ISO 10646' 표준을 가리키는 이름이다.
    //- UCS는 110만개 이상의 문자에 대해 코드 값을 정의하고 있다.
    //- 그 중에서 첫 65536개(0 ~ 65535 까지의 코드)의 문자 코드가 주로 사용된다.
    //- 이 범위의 유니코드를 'BMP(Basic Multilingual Plane; 기본 다국어 평면)'라 하며 보통 'UCS-2'라 부른다.
    //  즉 2바이트 범위에서 정의한 유니코드라는 의미다.  
    //- 자바가 사용하는 유니코드는 바로 이 'UCS-2'라 불리는 범위의 유니코드이다.
    // 기존 EUC-KR, ISO-8859-1와 호환X

    //## UTF-8
    //- UCS의 코드 값 중에서 00 ~ 7F(127개)까지 ASCII에 해당하는 UCS 코드는 그대로 1바이트로 표현한다.(영어를 예전처럼 1byte로)
    //  따라서 ASCII를 기본으로 사용하는 시스템의 경우 UTF-8로 인코딩 된 데이터를 특별한 처리없이 그대로 읽고 쓸 수 있다.
    //- 그 외의 문자 코드는 규칙에 따라 2바이트 ~ 4바이트까지 변환하여 표현한다.
    //- UCS의 UTF-8 변환 규칙
    //  000000 ~ 00007F: 0xxxxxxx
    //  000080 ~ 0007FF: 110yyyxx 10xxxxxx
    //  000800 ~ 00FFFF: 1110yyyy 10yyyyxx 10xxxxxx
    //  100000 ~ 10FFFF: 11110zzz 10zzyyyy 10yyyyxx 10xxxxxx 
    //- 대부분의 시스템에서 데이터 입출력 할 때 UTF-8을 사용한다.
    //- 자바에서도 데이터 입출력할 때 주로 UTF-8을 사용하고 있다.
    // 한글은 3byte (유니코드에서는 2byte)
    //
    // UCS-2  ==>  UTF-8
    // UCS-2 '가' = 1010 1100 0000 0000   (2byte)
    // UTF-8 '가' = 1110 1010 1011 0000 1000 0000   (3byte)
    // JVM 내부에서는 유니코드, 입출력&통신 시에는 UTF-8 사용
    // | JVM      |   File/Network |  URL Data  |
    // | UCS-2    |   UTF-8        |            |
    // | A:0041   |   A:41         |  A:41      |
    // | 가:AC00  |   가:EAB080    |  %EA%B0%80 |
    //                     -- URL encoding -->
    //                     <-- URL decoding --
    // 한글은 변환이 필수
    //  
    
  }
}